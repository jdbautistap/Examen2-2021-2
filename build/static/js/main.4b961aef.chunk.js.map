{"version":3,"sources":["Components/Card.js","Components/Cuartos.js","Components/Tabla.js","Components/DiagramaTorta.js","Components/CardCuartos.js","Components/CardSpace.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["Cards","space","onClick","style","marginLeft","marginRight","CardGroup","Card","Img","id","src","type","Body","Title","name","Text","address","Cuartos","habitaciones","Tabla","pID","className","scope","temp","devices","map","d","i","desired","value","DiagramaTorta","data","torta","forEach","element","push","pieChart","useRef","useEffect","piedata","d3","powerUsage","arc","innerRadius","outerRadius","colors","svg","current","attr","append","tooldiv","selectAll","join","on","e","text","unit","pageY","pageX","ref","CardCuartos","useState","setCuartos","cuarto","selectCuarto","localStorage","getItem","navigator","onLine","fetch","method","then","response","json","habitacionesU","homeId","setItem","JSON","stringify","catch","console","warn","parse","CardSpace","setspaces","spaces","selectSpaces","spacesU","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","getBrowserLanguage","language","userLanguage","ReactDOM","render","StrictMode","locale","substring","messages","Espanol","english","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"4OAwBeA,MAlBf,YACC,IADeC,EAChB,EADgBA,MAAOC,EACvB,EADuBA,QAGnB,OACA,qBAAKC,MAAO,CAAEC,WAAY,OAAQC,YAAa,QAA/C,SACA,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAML,QAASA,EAAf,UACE,cAACK,EAAA,EAAKC,IAAN,CAAUC,GAAG,UAAUC,IAAsB,UAAfT,EAAMU,KAAmB,mGAAqG,gFAC5J,eAACJ,EAAA,EAAKK,KAAN,WACE,cAACL,EAAA,EAAKM,MAAN,UAAaZ,EAAMa,OACnB,cAACP,EAAA,EAAKQ,KAAN,UAAYd,EAAMe,qB,SCMbC,MAjBf,YACC,IADiBC,EAClB,EADkBA,aAAchB,EAChC,EADgCA,QAG5B,OACA,qBAAKC,MAAO,CAAEC,WAAY,OAAQC,YAAa,QAA/C,SACA,cAACC,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAML,QAASA,EAAf,UACE,cAACK,EAAA,EAAKC,IAAN,CAAUC,GAAG,UAAUC,IAA6B,SAAtBQ,EAAaP,KAAkB,+EAAiF,8IAC9I,cAACJ,EAAA,EAAKK,KAAN,UACE,cAACL,EAAA,EAAKM,MAAN,UAAaK,EAAaJ,iBCqBrBK,MAlCf,SAAeC,GACb,OACE,uBAAOC,UAAU,QAAjB,SACI,8BACA,gCAEG,+BAEE,oBAAIC,MAAM,MAAV,eACA,oBAAIA,MAAM,MAAV,gBACA,oBAAIA,MAAM,MAAV,SAAgB,cAAC,IAAD,CAAkBb,GAAI,aACtC,oBAAIa,MAAM,MAAV,SAAgB,cAAC,IAAD,CAAkBb,GAAI,iBAI1C,gCACCW,EAAIG,KAAKC,QAAQC,KAAI,SAACC,EAAGC,GACxB,OACI,+BACI,oBAAIL,MAAM,MAAV,SAAiBK,EAAE,IACnB,6BAAKD,EAAEjB,KACP,6BAAKiB,EAAEZ,OACP,6BAAKY,EAAEE,QAAQC,UAJVH,EAAEjB,e,QC+CXqB,MA9Df,SAAuBV,GACnB,IAAIW,EAAO,GACXX,EAAIY,MAAMC,SAAQ,SAAAC,GACdH,EAAKI,KAAKD,MAEd,IAAME,EAAWC,mBAgDpB,OA/CAC,qBAAU,WAGT,IAAMC,EAAUC,MAASX,OAAM,SAAAH,GAAC,OAAIA,EAAEe,WAAWZ,QAAjCW,CAAwCT,GAElDW,EAAMF,MAASG,YAAY,GAAGC,YAAY,KAE1CC,EAASL,IAAgB,CAAC,UAAU,UAAU,UAAU,UAAU,YAGlEM,EAAMN,IAAUJ,EAASW,SAC1BC,KAAK,QAAS,KACdA,KAAK,SAAU,KAEfC,OAAO,KACND,KAAK,YAAY,sBAGjBE,EAAUV,IAAU,UACnBS,OAAO,OACP9C,MAAM,aAAa,UACnBA,MAAM,WAAW,YACjBA,MAAM,mBAAmB,SAIhC2C,EAAIG,OAAO,KACTE,UAAU,QACVpB,KAAKQ,GACLa,KAAK,QACJJ,KAAK,IAAKN,GACVM,KAAK,QAAO,SAACtB,EAAEC,GAAH,OAAOkB,EAAOlB,MAC1BqB,KAAK,SAAU,SACfK,GAAG,aAAa,SAACC,EAAE5B,GACnBwB,EAAQ/C,MAAM,aAAa,WACxBoD,KADH,UACW7B,EAAEK,KAAKjB,KADlB,aAC2BY,EAAEK,KAAKU,WAAWZ,MAD7C,YACsDH,EAAEK,KAAKU,WAAWe,UAExEH,GAAG,aAAa,SAACC,EAAE5B,GACnBwB,EAAQ/C,MAAM,MAAQmD,EAAEG,MAAM,GAAM,MACjCtD,MAAM,OAASmD,EAAEI,MAAM,GAAM,SAEhCL,GAAG,YAAW,WACdH,EAAQ/C,MAAM,aAAa,gBAM9B,qBAAKM,GAAG,QAAR,SACC,qBAAKkD,IAAKvB,OCaEwB,MA9Df,SAAqBxC,GAAK,IAAD,EACSyC,mBAAS,IADlB,mBACd5C,EADc,KACL6C,EADK,OAEUD,qBAFV,mBAEdE,EAFc,KAENC,EAFM,KAwCvB,OArCE1B,qBAAU,WAEN,GAAoC,MAAjC2B,aAAaC,QAAQ,YAAoBC,UAAUC,OACtDC,MARE,6IAUE,CACAC,OAAQ,QAGXC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACxC,GACL,IAAI2C,EAAgB,GACpB3C,EAAKE,SAAQ,SAACC,GACRA,EAAQyC,SAAWvD,EAAIF,aAAaT,IACtCiE,EAAcvC,KAAKD,MAGvB4B,EAAWY,GACXT,aAAaW,QAAQ,UAAWC,KAAKC,UAAU/C,OAEhDgD,OAAM,SAACzB,GAAD,OAAO0B,QAAQC,KAAK3B,UAE3B,CACF,IAAIvB,EAAO8C,KAAKK,MAAMjB,aAAaC,QAAQ,YACvCQ,EAAgB,GACpB3C,EAAKE,SAAQ,SAACC,GACRA,EAAQyC,SAAWvD,EAAIF,aAAaT,IACtCiE,EAAcvC,KAAKD,MAGvB4B,EAAWY,MAGZ,CAACtD,EAAIF,aAAaT,KAGnB,sBAAKA,GAAG,UAAR,UACE,6BAAI,cAAC,IAAD,CAAkBA,GAAI,cAC1B,sBAAKY,UAAU,MAAf,UACE,qBAAKA,UAAU,MAAKlB,MAAO,CAAEC,WAAY,OAAQC,YAAa,QAA9D,SACA,qBAAKgB,UAAU,aAAYlB,MAAO,CAAEC,WAAY,OAAQC,YAAa,QAArE,SACCY,EAAQQ,KAAI,SAACC,GAAD,OACX,cAAC,EAAD,CAAkCR,aAAcQ,EAAIxB,QAAS,kBAAM8D,EACtEtC,KADkBA,EAAEZ,KAAOY,EAAEiD,eAM9B,sBAAKtD,UAAU,MAAf,UACW,MAAV0C,EAAiB,cAAC,EAAD,CAAOxC,KAAMwC,IAAa,KACjC,MAAVA,EAAiB,cAAC,EAAD,CAAe/B,MAAO+B,IAAY,eCE3CoB,MA1Df,WAAqB,IAAD,EAEOtB,mBAAS,IAFhB,mBAEb5D,EAFa,KAENmF,EAFM,OAGWvB,qBAHX,mBAGbwB,EAHa,KAGLC,EAHK,KAkClB,OA7BAhD,qBAAU,WAE0B,MAA/B2B,aAAaC,QAAQ,UAAkBC,UAAUC,OAClDC,MAVI,8IAYF,CACEC,OAAQ,QAGTC,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACxC,GACL,IAAIwD,EAAU,GACdxD,EAAKE,SAAQ,SAACC,GACZqD,EAAQpD,KAAKD,MAEfkD,EAAUG,GACVtB,aAAaW,QAAQ,QAASC,KAAKC,UAAU/C,OAE9CgD,OAAM,SAACzB,GAAD,OAAO0B,QAAQC,KAAK3B,MAG7B8B,EAAUP,KAAKK,MAAMjB,aAAaC,QAAQ,aAI3C,IAGD,gCACE,sBAAKzD,GAAG,QAAR,UACE,6BAAI,cAAC,IAAD,CAAkBA,GAAI,eAC1B,qBAAKY,UAAU,aAAf,SACGpB,EAAMwB,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CAEEzB,MAAOyB,EACPxB,QAAS,kBAAMoF,EAAa5D,KAFvBA,EAAEjB,YAQf,qBAAKA,GAAG,eAAeN,MAAO,CAAEC,WAAY,OAAQC,YAAa,QAAjE,SACa,MAAVgF,EAAiB,cAAC,EAAD,CAAanE,aAAcmE,IAAa,OAE5D,qBAAK5E,GAAG,c,cC/CC+E,MARf,WACE,OACE,qBAAKnE,UAAU,MAAMlB,MAAO,CAAEC,WAAY,OAAQC,YAAa,QAA/D,SACE,cAAC,EAAD,OCGAoF,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2DAqCnC,SAASC,EAAgBC,EAAOC,GAC9B9B,UAAU+B,cACPC,SAASH,GACTzB,MAAK,SAAC6B,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBG,QACftC,UAAU+B,cAAcQ,YAI1B1B,QAAQ2B,IACN,+GAKEV,GAAUA,EAAOW,UACnBX,EAAOW,SAASR,KAMlBpB,QAAQ2B,IAAI,sCAGRV,GAAUA,EAAOY,WACnBZ,EAAOY,UAAUT,WAO5BrB,OAAM,SAAC+B,GACN9B,QAAQ8B,MAAM,4CAA6CA,MC9FjE,IAYeC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB1C,MAAK,YAAkD,IAA/C2C,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,yBCId,SAASO,IACP,OAAOpD,UAAUqD,UAAYrD,UAAUsD,aAUzCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CACEC,OAAQN,IAAqBO,UAAU,EAAG,GAC1CC,SAXyC,OAAzCR,IAAqBO,UAAU,EAAG,GAC7BE,EAC2C,OAAzCT,IAAqBO,UAAU,EAAG,GACpCG,OADF,EAOL,SAIA,cAAC,EAAD,QAGFC,SAASC,eAAe,SFXnB,SAAkBlC,GACvB,GAA6C,kBAAmB9B,UAAW,CAGzE,GADkB,IAAIiE,IAAIC,GAAwB1C,OAAOC,SAAS0C,MACpDC,SAAW5C,OAAOC,SAAS2C,OAIvC,OAGF5C,OAAO6C,iBAAiB,QAAQ,WAC9B,IAAMxC,EAAK,UAAMqC,GAAN,sBAEP5C,IAgEV,SAAiCO,EAAOC,GAEtC5B,MAAM2B,EAAO,CACXyC,QAAS,CAAE,iBAAkB,YAE5BlE,MAAK,SAACC,GAEL,IAAMkE,EAAclE,EAASiE,QAAQE,IAAI,gBAEnB,MAApBnE,EAASoE,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C1E,UAAU+B,cAAc4C,MAAMvE,MAAK,SAAC6B,GAClCA,EAAa2C,aAAaxE,MAAK,WAC7BoB,OAAOC,SAASoD,eAKpBjD,EAAgBC,EAAOC,MAG1BlB,OAAM,WACLC,QAAQ2B,IAAI,oEAtFVsC,CAAwBjD,EAAOC,GAI/B9B,UAAU+B,cAAc4C,MAAMvE,MAAK,WACjCS,QAAQ2B,IACN,+GAMJZ,EAAgBC,EAAOC,OEX/BiD,GAKAnC,K","file":"static/js/main.4b961aef.chunk.js","sourcesContent":["import React from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\nimport \"./Card.css\"\r\n\r\n\r\nfunction Cards({space, onClick})\r\n{\r\n  \r\n    return(\r\n    <div style={{ marginLeft: \"20px\", marginRight: \"20px\" }}> \r\n    <CardGroup>\r\n      <Card onClick={onClick}>\r\n        <Card.Img id=\"imagen1\" src = {space.type === \"house\" ? \"https://img.freepik.com/vector-gratis/dibujos-animados-casa-otono_75802-402.jpg?size=626&ext=jpg\" : \"https://preview.free3d.com/img/2015/10/2162645737513420392/ir9bbw8j-900.jpg\"} />\r\n        <Card.Body>\r\n          <Card.Title>{space.name}</Card.Title>\r\n          <Card.Text>{space.address}</Card.Text>\r\n          </Card.Body>\r\n          </Card>\r\n          </CardGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import React from 'react'\r\nimport Card from 'react-bootstrap/Card';\r\nimport CardGroup from 'react-bootstrap/CardGroup';\r\nimport \"./Card.css\"\r\n\r\nfunction Cuartos({habitaciones, onClick})\r\n{\r\n  \r\n    return(\r\n    <div style={{ marginLeft: \"20px\", marginRight: \"20px\" }}> \r\n    <CardGroup>\r\n      <Card onClick={onClick}>\r\n        <Card.Img id=\"imagen1\" src = {habitaciones.type === \"room\" ? \"https://i.pinimg.com/originals/56/08/2c/56082c7ed6a4098dd12392e79eb604ce.jpg\" : \"https://hips.hearstapps.com/hmg-prod.s3.amazonaws.com/images/cocina-con-lamas-de-madra-1617582027.jpg?crop=1.00xw:1.00xh;0,0&resize=640:*\"} />\r\n        <Card.Body>\r\n          <Card.Title>{habitaciones.name}</Card.Title>\r\n          </Card.Body>\r\n          </Card>\r\n          </CardGroup>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cuartos;","import { FormattedMessage } from \"react-intl\";\r\nfunction Tabla(pID) {\r\n  return (\r\n    <table className=\"table\" >\r\n        <b>\r\n        <thead >\r\n           \r\n           <tr>\r\n          \r\n             <th scope=\"col\">#</th>\r\n             <th scope=\"col\">ID</th>\r\n             <th scope=\"col\"><FormattedMessage id =\"Device\"/></th>\r\n             <th scope=\"col\"><FormattedMessage id =\"Value\"/></th>\r\n           \r\n           </tr>\r\n         </thead>\r\n         <tbody>\r\n         {pID.temp.devices.map((d, i) => {\r\n           return(\r\n               <tr key={d.id}>\r\n                   <th scope=\"row\">{i+1}</th>\r\n                   <td>{d.id}</td>\r\n                   <td>{d.name}</td>\r\n                   <td>{d.desired.value}</td>\r\n               </tr>\r\n   \r\n           )}\r\n          )}\r\n         </tbody>\r\n        </b>\r\n      \r\n    </table>\r\n  );\r\n}\r\n\r\nexport default Tabla;\r\n","// Codigo adaptado de https://github.com/varsllc/livelylab/blob/main/pie/pie_tooltip/Pie.js\r\nimport React, { useEffect, useRef } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nfunction DiagramaTorta(pID) {\r\n    let data = []\r\n    pID.torta.forEach(element => {\r\n        data.push(element);\r\n    });\r\n    const pieChart = useRef()\r\n\tuseEffect(()=>{\r\n\r\n\t\t// Get positions for each data object\r\n\t\tconst piedata = d3.pie().value(d => d.powerUsage.value)(data)\r\n\t\t// Define arcs for graphing \r\n\t\tconst arc = d3.arc().innerRadius(0).outerRadius(200)\r\n\r\n\t\tconst colors = d3.scaleOrdinal(['#ffa822','#134e6f','#ff6150','#1ac0c6','#dee0e6'])\r\n\r\n\t\t// Define the size and position of svg\r\n\t\tconst svg = d3.select(pieChart.current)\r\n\t\t\t\t\t\t.attr('width', 600)\r\n\t\t\t\t\t\t.attr('height', 600)\r\n\t\t\t\t\t\t// .style('background-color','yellow')\r\n\t\t\t\t\t\t.append('g')\r\n\t\t\t\t\t\t\t.attr('transform','translate(300,300)')\r\n\r\n\t\t// Add tooltip\r\n\t\tconst tooldiv = d3.select('#Torta')\r\n\t\t\t\t\t\t  .append('div')\r\n\t\t\t\t\t\t  .style('visibility','hidden')\r\n\t\t\t\t\t\t  .style('position','absolute')\r\n\t\t\t\t\t\t  .style('background-color','white')\r\n\r\n\r\n\t\t// Draw pie\r\n\t\tsvg.append('g')\r\n\t\t\t.selectAll('path')\r\n\t\t\t.data(piedata)\r\n\t\t\t.join('path')\r\n\t\t\t\t.attr('d', arc)\r\n\t\t\t\t.attr('fill',(d,i)=>colors(i))\r\n\t\t\t\t.attr('stroke', 'white')\r\n\t\t\t\t.on('mouseover', (e,d)=>{\r\n\t\t\t\t\ttooldiv.style('visibility','visible')\r\n\t\t\t\t\t\t\t.text(`${d.data.name}: ${d.data.powerUsage.value} ${d.data.powerUsage.unit}`)\r\n\t\t\t\t})\r\n\t\t\t\t.on('mousemove', (e,d)=>{\r\n\t\t\t\t\ttooldiv.style('top', (e.pageY-50) + 'px')\r\n\t\t\t\t\t\t\t.style('left', (e.pageX-50) + 'px')\r\n\t\t\t\t})\r\n\t\t\t\t.on('mouseout',()=>{\r\n\t\t\t\t\ttooldiv.style('visibility','hidden')\r\n\t\t\t\t})\r\n\r\n\t})\r\n\r\n\treturn (\r\n\t\t<div id='Torta'>\r\n\t\t\t<svg ref={pieChart}></svg>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\n\r\n\r\nexport default DiagramaTorta;","import React from 'react'\r\nimport Cuartos1 from './Cuartos'\r\nimport Tabla from './Tabla';\r\nimport \"./Card.css\"\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useState, useEffect } from \"react\";\r\nimport DiagramaTorta from './DiagramaTorta';\r\n\r\nconst url=\"https://gist.githubusercontent.com/josejbocanegra/92c90d5f2171739bd4a76d639f1271ea/raw/9effd124c825f7c2a7087d4a50fa4a91c5d34558/rooms.json\";\r\n\r\nfunction CardCuartos(pID){\r\n    const [Cuartos, setCuartos] = useState([]);\r\n    const [cuarto, selectCuarto] = useState();\r\n    useEffect(() => {\r\n\r\n        if(localStorage.getItem(\"Cuartos\")==null && navigator.onLine) {\r\n        fetch(\r\n            url,\r\n            {\r\n            method: \"GET\",\r\n            }\r\n        )\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          let habitacionesU = [];\r\n          data.forEach((element) => {\r\n            if (element.homeId === pID.habitaciones.id) {\r\n              habitacionesU.push(element);\r\n            }\r\n          });\r\n          setCuartos(habitacionesU);\r\n          localStorage.setItem(\"Cuartos\", JSON.stringify(data))\r\n        })\r\n        .catch((e) => console.warn(e));\r\n    }\r\n    else{\r\n      var data = JSON.parse(localStorage.getItem(\"Cuartos\"));\r\n      let habitacionesU = [];\r\n      data.forEach((element) => {\r\n        if (element.homeId === pID.habitaciones.id) {\r\n          habitacionesU.push(element);\r\n        }\r\n      });\r\n      setCuartos(habitacionesU);\r\n  }\r\n    \r\n  }, [pID.habitaciones.id]);\r\n\r\n  return (\r\n    <div id=\"Cuartos\" >\r\n      <h1><FormattedMessage id =\"MyRooms\"/></h1>\r\n      <div className=\"row\">\r\n        <div className=\"col\"style={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\r\n        <div className=\"card-group\"style={{ marginLeft: \"20px\", marginRight: \"20px\" }} >\r\n        {Cuartos.map((d) => (\r\n          <Cuartos1 key={d.name + d.homeId} habitaciones={d}  onClick={() => selectCuarto\r\n      (d)}/>\r\n        ))}\r\n      </div>\r\n        </div>\r\n      \r\n      <div className=\"col\">\r\n      {cuarto != null ? <Tabla temp={cuarto} /> : null}\r\n      {cuarto != null ? <DiagramaTorta torta={cuarto}/> : null}\r\n      </div>\r\n    </div>\r\n      </div> \r\n  );\r\n}\r\n\r\nexport default CardCuartos\r\n\r\n","import React from 'react'\r\nimport Card from './Card'\r\nimport \"./Card.css\"\r\nimport { FormattedMessage } from \"react-intl\";\r\nimport { useState, useEffect } from \"react\";\r\nimport CardCuartos from './CardCuartos';\r\n\r\nconst url=\"https://gist.githubusercontent.com/josejbocanegra/0067d2b28b009140fee423cfc84e40e6/raw/6e6b11160fbcacb56621b6422684d615dc3a0d33/spaces.json\"\r\n\r\nfunction CardSpace(){\r\n\r\nconst [space, setspaces] = useState([]);\r\nconst [spaces, selectSpaces] = useState();\r\n\r\n  useEffect(() => {\r\n    \r\n    if(localStorage.getItem(\"space\")==null && navigator.onLine) {\r\n      fetch(\r\n        url,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      )\r\n        .then((response) => {\r\n          return response.json();\r\n        })\r\n        .then((data) => {\r\n          let spacesU = [];\r\n          data.forEach((element) => {\r\n            spacesU.push(element);\r\n          });\r\n          setspaces(spacesU);\r\n          localStorage.setItem(\"space\", JSON.stringify(data))\r\n        })\r\n        .catch((e) => console.warn(e));\r\n    }\r\n    else{\r\n      setspaces(JSON.parse(localStorage.getItem(\"space\")));\r\n  }\r\n    \r\n    \r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <div id=\"space\">\r\n        <h1><FormattedMessage id =\"MySpaces\"/></h1>\r\n        <div className=\"card-group\">\r\n          {space.map((d) => (\r\n            <Card\r\n              key={d.id}\r\n              space={d}\r\n              onClick={() => selectSpaces(d)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      <div id=\"Habitaciones\" style={{ marginLeft: \"20px\", marginRight: \"20px\" }}>\r\n        {spaces != null ? <CardCuartos habitaciones={spaces} /> : null}\r\n      </div>\r\n      <div id=\"chart\">\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CardSpace;\r\n\r\n","import React from 'react';\r\nimport CardSpace from './Components/CardSpace';\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\" style={{ marginLeft: \"10px\", marginRight: \"10px\" }}>\r\n      <CardSpace/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://cra.link/PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://cra.link/PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://cra.link/PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log('No internet connection found. App is running in offline mode.');\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { IntlProvider } from \"react-intl\";\r\nimport Espanol from \"./Translate/espanol.json\";\r\nimport english from \"./Translate/english.json\";\r\n\r\n\r\nfunction getBrowserLanguage() {\r\n  return navigator.language || navigator.userLanguage;\r\n}\r\nfunction language() {\r\n  if (getBrowserLanguage().substring(0, 2) === \"es\") {\r\n    return Espanol;\r\n  } else if (getBrowserLanguage().substring(0, 2) === \"en\") {\r\n    return english;\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <IntlProvider\r\n      locale={getBrowserLanguage().substring(0, 2)}\r\n      messages={language()}\r\n    >\r\n    <App />\r\n    </IntlProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://cra.link/PWA\r\nserviceWorkerRegistration.register();\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}